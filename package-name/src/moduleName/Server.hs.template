{-# LANGUAGE OverloadedStrings #-}
module ${moduleName}.Server (runServer) where

import Control.Monad.Trans.Either
import Data.Text
import Network.Wai
import Network.Wai.Handler.Warp
import Servant

import ${moduleName}.API as API
import ${moduleName}.Types

-- | helper type for handling the default servant response
data Handler a = EitherT ServantErr IO a

server :: Server TheAPI
server = undefined --the definition of handlers

app :: Application
app = serve API.theAPI server

runServer :: Port -> IO ()
runServer port = run port app
